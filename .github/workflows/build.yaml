name: CI, CD, ML Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Git LFS
        run: |
          sudo apt-get install git-lfs
          git lfs install
          git lfs pull

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev ffmpeg
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv lock
          pipenv sync --dev --python $(which python)
          pipenv shell --fancy --python $(which python)
          pipenv install python-dotenv

      - name: Run tests with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/machine-learning-client
        run: |
          cd machine-learning-client
          pipenv run pytest tests/

      - name: Build and Push Docker Image
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build -t capks/music_classifier:${{ github.sha }} .
          docker push capks/music_classifier:${{ github.sha }}

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            scp docker-compose.yml root@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:/var/www/myapp
            cd /var/www/myapp
            docker-compose pull
            docker-compose down
            docker-compose up -d
